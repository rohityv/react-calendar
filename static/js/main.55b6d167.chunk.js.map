{"version":3,"sources":["App.js","index.js"],"names":["style","space","marginBottom","sectionPadding","padding","AddTask","adddata","newDate","useState","task","setTask","date","setDate","console","log","action","onSubmit","e","preventDefault","className","type","value","onChange","target","placeholder","onClick","DispTask","data","map","id","App","setData","Date","userData","Math","floor","random","newData","toLocaleDateString","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAIMA,EAAQ,CACZC,MAAO,CACLC,aAAc,QAEhBC,eAAgB,CACdC,QAAS,WAyCb,SAASC,EAAT,GAAqC,IAAnBC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,QACzB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAWA,OATAC,QAAQC,IAAIP,GAUV,cAAC,WAAD,UACE,sBAAMQ,OAAO,GAAGC,SATpB,SAAsBC,GACpBA,EAAEC,iBACFZ,EAAQ,CAACG,OAAME,SACfD,EAAQ,IACRE,EAAQ,KAKoCZ,MAAQA,EAAMC,MAAxD,SACI,sBAAKkB,UAAU,UAAf,UACE,qBAAKA,UAAU,SAAf,SACE,uBAAOA,UAAU,eAAeC,KAAK,OAAOC,MAAOZ,EAAMa,SAAY,SAAAL,GAAC,OAAIP,EAAQO,EAAEM,OAAOF,QAAQG,YAAY,eAEjH,qBAAKL,UAAU,SAAf,SACE,uBAAOA,UAAU,eAAeC,KAAK,OAAOC,MAAOV,EAAMc,QAAW,SAAAR,GAAC,OAAIL,EAAQL,IAAUiB,YAAc,iCAE3G,qBAAKL,UAAU,SAAf,SACE,wBAAQA,UAAU,kBAAkBC,KAAO,SAA3C,gCAQd,SAASM,EAAT,GAA0B,IAAPC,EAAM,EAANA,KAGjB,OAFAd,QAAQC,IAAIa,GAGV,gCACE,4DACCA,EAAKC,KAAI,SAAAD,GAAI,OACZ,qBAAKR,UAAU,eAAf,SACE,qBAAIA,UAAU,GAAd,UAAkBQ,EAAKlB,KAAvB,QAAkCkB,EAAKhB,KAAvC,QADkCgB,EAAKE,UASlCC,MApFf,WAEE,MAAwBtB,mBAAS,IAAjC,mBAAOmB,EAAP,KAAaI,EAAb,KACA,EAAwBvB,mBAAS,IAAIwB,MAArC,mBAAOrB,EAAP,KAAaC,EAAb,KAiBA,OACE,cAAC,WAAD,UACE,qBAAKO,UAAU,YAAf,SACE,0BAASnB,MAAQA,EAAMG,eAAvB,UACE,6CACA,cAAC,IAAD,CAAUmB,SApBlB,SAAsBX,GACpBC,EAAQD,IAmBgCU,MAAOV,IACzC,oBAAIQ,UAAU,OAAd,sBACA,cAACd,EAAD,CAASC,QAlBjB,SAAoB2B,GAElB,IAAMJ,EAAKK,KAAKC,MAAoB,IAAdD,KAAKE,SAAe,GAC1CvB,QAAQC,IAAIe,GAEZ,IAAMQ,EAAO,aAAIR,MAAOI,GACxBpB,QAAQC,IAAIuB,GACZN,EAAQ,GAAD,mBAAKJ,GAAL,CAAWU,MAWoB9B,QAAWI,EAAK2B,mBAAmB,WACnE,cAACZ,EAAD,CAAUC,KAAQA,YCrC5BY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.55b6d167.chunk.js","sourcesContent":["import React, {Fragment, useState} from \"react\";\nimport Calendar from \"react-calendar\"\nimport 'react-calendar/dist/Calendar.css';\n\nconst style = {\n  space: {\n    marginBottom: '40px'\n  },\n  sectionPadding: {\n    padding: '50px 0'\n  }\n}\n\n\nfunction App() {\n\n  const [data, setData] = useState([])\n  const [date, setDate] = useState(new Date());\n\n  function handleChange(date){\n    setDate(date)\n  }\n\n  function addNewData(userData){\n\n    const id = Math.floor(Math.random()*100 + 1)\n    console.log(id)\n\n    const newData = {id, ...userData}\n    console.log(newData)\n    setData([...data, newData])\n  }\n\n\n  return (\n    <Fragment>\n      <div className=\"container\">\n        <section style= {style.sectionPadding}>\n          <h1>Select Date</h1>\n          <Calendar onChange={handleChange} value={date} />\n          <h2 className=\"mt-5\">Add Task</h2>\n          <AddTask adddata = {addNewData} newDate = {date.toLocaleDateString(\"en-US\")} />\n          <DispTask data = {data}/>\n          {/* {date.toLocaleDateString(\"en-US\")} */}\n        </section>\n      </div>\n    </Fragment>\n  );\n}\n\nfunction AddTask({adddata, newDate}){\n  const [task, setTask] = useState('')\n  const [date, setDate] = useState('')\n\n  console.log(newDate)\n\n  function handleSubmit(e){\n    e.preventDefault()\n    adddata({task, date})\n    setTask('')\n    setDate('')\n  }\n\n  return(\n    <Fragment>\n      <form action=\"\" onSubmit = {handleSubmit} style= {style.space}>\n          <div className=\"row g-4\">\n            <div className=\"col-12\">\n              <input className=\"form-control\" type=\"text\" value={task} onChange = {e => setTask(e.target.value)} placeholder=\"Add task\"></input>\n            </div>\n            <div className=\"col-12\">\n              <input className=\"form-control\" type=\"text\" value={date} onClick = {e => setDate(newDate)} placeholder = \"Click to add selected date\" ></input>\n            </div>\n            <div className=\"col-12\">\n              <button className=\"btn btn-success\" type = \"submit\">Save Task</button>\n            </div>  \n          </div>\n        </form> \n    </Fragment>\n  )\n}\n\nfunction DispTask({data}){\n  console.log(data)\n\n  return(\n    <div>\n      <h2>Results will display here.</h2>\n      {data.map(data => (\n        <div className=\"text-success\" key= {data.id}>\n          <h3 className=\"\">{data.task} ||  {data.date} </h3>\n        </div>\n      ))}\n    </div>\n  )\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}